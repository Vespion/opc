name: PR Reporters
on:
    workflow_run:
        workflows: ["Pull Request Tasks"] # runs after pr workflow
        types:
            - completed

permissions:
    contents: read
    checks: write
    pull-requests: write

jobs:
    report-lint:
        runs-on: ubuntu-latest
        steps:
            - uses: reviewdog/action-setup@v1

            - name: Download eslint log
              uses: actions/download-artifact
              with:
                  name: eslint-log

            - name: Run reviewdog
              env:
                  REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  cat ./eslint.log | reviewdog \
                  -name="eslint" \
                  -reporter="github-pr-check,github-pr-review" \
                  -filter-mode="added" \
                  -fail-on-error="false" \
                  -level="error"          

    report-style:
        runs-on: ubuntu-latest
        steps:
            - uses: reviewdog/action-setup@v1

            - name: Download style log
              uses: actions/download-artifact
              with:
                  name: style-log

            - name: Run reviewdog
              env:
                  REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  cat ./style.log | reviewdog \
                  -efm="%E[%trror] %f: %m (%l:%c)" \
                  -efm="%C[error]%r" \
                  -efm="%Z[error]%r" \
                  -efm="%-G%r" \
                  -name="prettier" \
                  -reporter="github-pr-review" \
                  -filter-mode="added" \
                  -fail-on-error="false" \
                  -level="warning"

            - name: Download style patch
              uses: actions/download-artifact
              with:
                name: style-patch

            - name: Apply style patch
              run: git apply style.patch

            - name: Suggest style fixes
              uses: reviewdog/action-suggester@v1
              with:
                github_token: ${{ secrets.GITHUB_TOKEN }}
                tool_name: prettier
                level: warning
                filter_mode: added
                fail_on_error: false
                reviewdog_flags: -guessPullRequest=true

    report-alex:
        runs-on: ubuntu-latest
        steps:
            - uses: reviewdog/action-setup@v1

            - name: Download alex log
              uses: actions/download-artifact
              with:
                  name: alex-log

            - name: Run reviewdog
              env:
                  REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  cat ./alex.log | reviewdog \
                  -efm='%-P%f' \
                  -efm=' %#%l:%c-%[0-9]%#:%[0-9]%# %# %trror  %m' \
                  -efm=' %#%l:%c-%[0-9]%#:%[0-9]%# %# %tarning  %m' \
                  -efm='%-Q' \
                  -efm='%-G%.%#' \
                  -name="alex" \
                  -reporter="github-pr-review" \
                  -filter-mode="added" \
                  -fail-on-error="false" \
                  -level="warning"

    report-tests:
        runs-on: ubuntu-latest
        steps:
            - uses: dorny/test-reporter@v1
              with:
                  artifact: test-results # artifact name
                  name: Unit Tests # Name of the check run which will be created
                  path: "*.xml" # Path to test results (inside artifact .zip)
                  reporter: jest-junit # Format of test results
